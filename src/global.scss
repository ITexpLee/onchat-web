/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "~@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "~@ionic/angular/css/normalize.css";
@import "~@ionic/angular/css/structure.css";
@import "~@ionic/angular/css/typography.css";
@import "~@ionic/angular/css/display.css";

/* Optional CSS utils that can be commented out */
@import "~@ionic/angular/css/padding.css";
@import "~@ionic/angular/css/float-elements.css";
@import "~@ionic/angular/css/text-alignment.css";
@import "~@ionic/angular/css/text-transformation.css";
@import "~@ionic/angular/css/flex-utils.css";

@import "./theme/color.scss";
.font-family-primary {
  font-family: "Alibaba-Sans-Black" !important;
}
.color-primary {
  color: $primary !important;
}
.color-dark {
  color: $dark !important;
}
.color-danger {
  color: $danger !important;
}
.bg-primary {
  background-color: $primary !important;
}
.bg-white {
  background-color: #fff !important;
}
.bg-danger {
  background-color: $danger !important;
}
.d-block {
  display: block !important;
}
.d-inline {
  display: inline !important;
}
.d-inline-block {
  display: inline-block !important;
}
.d-flex {
  display: flex !important;
}
.justify-content-center {
  justify-content: center !important;
}
.align-items-center {
  align-items: center !important;
}
.text-left {
  text-align: left !important;
}
.text-center {
  text-align: center !important;
}
.text-right {
  text-align: right !important;
}
.float-left {
  float: left !important;
}
.float-right {
  float: right !important;
}
.font-weight-normal {
  font-weight: normal !important;
}
.font-weight-bold {
  font-weight: bold !important;
}
.m-0 {
  margin: 0 !important;
}
.p-0 {
  padding: 0 !important;
}
.outline-none {
  outline: none !important;
}

@font-face {
  font-family: "Alibaba-Sans-Black";
  src: url("./assets/font/Alibaba-Sans-Black/font.gif");
  src: url("./assets/font/Alibaba-Sans-Black/font.gif") format("embedded-opentype"),
    url("./assets/font/Alibaba-Sans-Black/font.bmp") format("woff"),
    url("./assets/font/Alibaba-Sans-Black/font.jpg") format("truetype"),
    url("./assets/font/Alibaba-Sans-Black/font.png") format("svg");
}

* {
  outline: none;

  &::-webkit-scrollbar {
    display: none;
  }
}

.flex-col-container {
  display: flex;
  min-height: 100%;
  flex-direction: column;
}

.ripple-parent {
  position: relative;
  overflow: hidden;
}

ion-grid,
ion-col {
  padding: 0;
}
// 返回按钮图标
ion-back-button {
  --padding-start: 0.25rem;
  --color: #616161;
}

ion-list.list-ios {
  margin: 0;
}

.ipt-primary {
  color: $dark;
}
.ipt-primary:focus {
  box-shadow: 0 0 0 0.2rem rgba($primary, 0.5);
}

button {
  cursor: pointer;
}
.btn-primary {
  color: $dark;
  background-color: $primary;
}
.btn-primary:hover {
  background-color: rgba($primary, 0.75);
}
.btn-primary:focus {
  box-shadow: 0 0 0 0.2rem rgba($primary, 0.5);
}
.btn-secondary {
  color: #616161;
  background-color: #f5f5f5;
}
.btn-secondary:hover {
  background-color: #fafafa;
}
.btn-secondary:focus {
  box-shadow: 0 0 0 0.2rem rgba(#f5f5f5, 0.75);
}

.ipt-primary,
.btn-primary,
.btn-secondary {
  transition: all 0.15s ease-in-out;
}

// 向左滑出
@keyframes slide-left {
  from {
    transform: translateX(100%);
  }
  to {
    transform: translateX(0);
  }
}
// 向右滑出
@keyframes slide-right {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0);
  }
}
// 向上滑出
@keyframes slide-up {
  from {
    transform: translateY(100%);
  }
  to {
    transform: translateY(0);
  }
}
// 向下滑出
@keyframes slide-down {
  from {
    transform: translateY(-100%);
  }
  to {
    transform: translateY(0);
  }
}
/* 回弹动画 */
@keyframes active {
  0% {
    transform: scale(1);
  }
  25% {
    transform: scale(0.75);
  }
  75% {
    transform: scale(1.25);
  }
  100% {
    transform: scale(1.1);
  }
}
/* 淡入动画 */
@keyframes fade-in {
  from {
    opacity: 0.5;
  }
  to {
    opacity: 1;
  }
}
/* 涟漪动画 */
@keyframes ripple {
  from {
    transform: scale(0);
  }
  to {
    transform: scale(1);
    opacity: 0;
  }
}